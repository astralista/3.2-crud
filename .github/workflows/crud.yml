name: Django CRUD

on:
  push:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-22.04
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: '0'
      ALLOWED_HOST: ${{ secrets.ALLOWED_HOSTS }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
    services:
      postgres_main:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ env.DB_NAME }}
          POSTGRES_USER: ${{ env.DB_USER }}
          POSTGRES_PASSWORD: ${{ env.DB_PASSWORD }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Проверка наличия изменений
        uses: actions/checkout@v3

      - name: Установка python и окружения
        uses: actions/setup-python@v3

      - name: Установка зависимостей
        run: pip install -r requirements.txt

      - name: Линтинг кода
        run: flake8 stocks_products/logistic/ --exclude stocks_products/logistic/migrations/

      - name: Тестирование кода
        run: cd stocks_products/; python manage.py test
        env:
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DEBUG: ${{ env.DEBUG }}
          ALLOWED_HOST: ${{ env.ALLOWED_HOSTS }}
          DB_ENGINE: ${{ env.DB_ENGINE }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_NAME: ${{ env.DB_NAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_USER: ${{ env.DB_USER }}

      - name: Деплой
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: expect /home/astralista/3.2-crud/stocks_products/deploy.exp
